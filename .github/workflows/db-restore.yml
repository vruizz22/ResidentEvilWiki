# Workflow para backup y restauración automática de la base de datos a Supabase
# - Realiza un backup de la base de datos actual (DATABASE_URL)
# - Sube el backup como artifact descargable desde GitHub Actions
# - Descarga el backup y lo restaura automáticamente en una base de datos Supabase (SUPABASE_DB_URL)
# - Fuerza IPv4 y SSL para conectar a Supabase

name: Backup and Restore to Supabase

on:
  workflow_dispatch: # Permite ejecución manual desde la UI

jobs:
  backup-and-restore:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client jq iproute2

      - name: Dump current DB (External URL)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          uri="$DATABASE_URL"
          no_proto=${uri#*://}
          user=${no_proto%%:*}
          pass=${no_proto#*:}; pass=${pass%%@*}
          host=${no_proto#*@}; host=${host%%/*}
          dbname=${no_proto#*/}; dbname=${dbname%%\?*}

          echo "Backup desde: user=$user host=$host db=$dbname"
          PGPASSWORD="$pass" pg_dump \
            --format=custom --clean --no-owner \
            --host="$host" --username="$user" "$dbname" \
            -f dump-$(date +'%F').backup

      - name: Upload backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: db-backup-$(date +'%F')
          path: dump-*.backup

      - name: Descargar backup para restaurar en Supabase
        uses: actions/download-artifact@v4
        with:
          name: db-backup-$(date +'%F')

      - name: Restaurar backup en Supabase (IPv4 + SSL)
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          uri="$SUPABASE_DB_URL"
          no_proto=${uri#*://}
          user=${no_proto%%:*}
          pass=${no_proto#*:}; pass=${pass%%@*}
          # Extraer host:port/db
          host_port_db=${no_proto#*@}
          host=${host_port_db%%:*}
          port_db=${host_port_db#*:}
          port=${port_db%%/*}
          dbname=${port_db#*/}; dbname=${dbname%%\?*}

          echo "Resolviendo IPv4 de $host..."
          ipv4=$(getent ahosts $host | awk '/STREAM/ && /IPv4/ {print $1; exit}')
          if [[ -z "$ipv4" ]]; then
            echo "No se pudo resolver IPv4 para $host, usando hostname directamente."
            ipv4="$host"
          fi

          echo "Restaurando en: user=$user host=$ipv4 port=$port db=$dbname (SSL Mode=require)"
          PGPASSWORD="$pass" PGHOST="$ipv4" PGPORT="$port" PGUSER="$user" PGDATABASE="$dbname" PGSSLMODE=require pg_restore \
            --verbose --clean --no-owner \
            --host="$ipv4" --port="$port" --username="$user" --dbname="$dbname" \
            dump-*.backup

          echo "Restauración completa en Supabase."
